{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-ucb-sisinfo-8723543"
		},
		"datalake_conn_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"datalake_conn\""
		},
		"sa_producto_cliente_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"sa_producto_cliente\""
		},
		"sql_dw_producto_cliente_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"sql_dw_producto_cliente\""
		},
		"github_com_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"sql_dw_producto_cliente_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-8723543.database.windows.net"
		},
		"sql_dw_producto_cliente_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dw_producto_cliente"
		},
		"sql_dw_producto_cliente_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminValAdri"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopiarArchivos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.p_array",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_github_com",
											"type": "DatasetReference",
											"parameters": {
												"file_name": {
													"value": "@item().file_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sink",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "@item().folder_name",
													"type": "Expression"
												},
												"file_name": {
													"value": "@item().file_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_array": {
						"type": "array",
						"defaultValue": [
							{
								"folder_name": "clientes",
								"file_name": "Clientes.csv"
							},
							{
								"folder_name": "clientes_BD_GEN",
								"file_name": "Clientes_BD-GEN.csv"
							},
							{
								"folder_name": "clientes_location",
								"file_name": "Clientes_location.csv"
							},
							{
								"folder_name": "detalle_ventas",
								"file_name": "Detalle_ventas.csv"
							},
							{
								"folder_name": "productos",
								"file_name": "Productos.csv"
							},
							{
								"folder_name": "productos_CAT_MANT",
								"file_name": "Productos_CAT_MANT.csv"
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-01T21:32:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_github_com')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_pipeline_clientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "bronze_df_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/bronze_df_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_pipeline_clientes_bd_gen')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "bronze_df_clientes_bd_gen",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/bronze_df_clientes_bd_gen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_pipeline_clientes_location')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "bronze_df_clientes_location",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/bronze_df_clientes_location')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_pipeline_detalle_ventas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "bronze_df_detalle_ventas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/bronze_df_detalle_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_pipeline_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "bronze_df_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/bronze_df_productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_pipeline_productos_cat_mant')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "bronze_df_productos_cat_mantenance",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/bronze_df_productos_cat_mantenance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gold_pipeline_dim_cliente')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "gold_df_dim_cliente",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/gold_df_dim_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gold_pipeline_dim_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "gold_df_dim_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/gold_df_dim_producto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gold_pipeline_hechos_ordenes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "gold_df_dim_cliente",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Data flow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "gold_df_dim_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Data flow3",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "gold_df_hechos_ordenes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/gold_df_dim_cliente')]",
				"[concat(variables('factoryId'), '/dataflows/gold_df_dim_producto')]",
				"[concat(variables('factoryId'), '/dataflows/gold_df_hechos_ordenes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_pipeline_clientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "silver_df_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/silver_df_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_pipeline_clientes_bd_gen')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "silver_df_clientes_bd_gen",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/silver_df_clientes_bd_gen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_pipeline_clientes_location')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "silver_df_clientes_location",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/silver_df_clientes_location')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_pipeline_detalle_ventas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "silver_df_detalle_ventas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/silver_df_detalle_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_pipeline_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "silver_df_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/silver_df_productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_pipeline_productos_cat_mant')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "silver_df_productos_cat_mant",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/silver_df_productos_cat_mant')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_clientes_location')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "idcountry",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "CLIENTES_LOCATION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_cliente_bd_gen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "cid",
						"type": "varchar"
					},
					{
						"name": "bdate",
						"type": "varchar"
					},
					{
						"name": "gen",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "CLIENTES_BD_GEN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_clientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "clikey",
						"type": "varchar"
					},
					{
						"name": "firstname",
						"type": "varchar"
					},
					{
						"name": "lastname",
						"type": "varchar"
					},
					{
						"name": "marital_status",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "CLIENTES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_detalle_ventas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "numorder",
						"type": "varchar"
					},
					{
						"name": "productkey",
						"type": "varchar"
					},
					{
						"name": "custid",
						"type": "varchar"
					},
					{
						"name": "orderdt",
						"type": "varchar"
					},
					{
						"name": "shipdt",
						"type": "varchar"
					},
					{
						"name": "sales",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "varchar"
					},
					{
						"name": "price",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "DETALLE_VENTAS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "idproduct",
						"type": "varchar"
					},
					{
						"name": "productkey",
						"type": "varchar"
					},
					{
						"name": "productname",
						"type": "varchar"
					},
					{
						"name": "productcost",
						"type": "varchar"
					},
					{
						"name": "productline",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "PRODUCTOS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_productos_cat_mant')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "producto_id",
						"type": "varchar"
					},
					{
						"name": "categoria",
						"type": "varchar"
					},
					{
						"name": "subcategoria",
						"type": "varchar"
					},
					{
						"name": "mantenimiento",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "PRODUCTOS_CAT_MANT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/clientes_bd_gen_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake_conn",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clientes_BD-GEN.csv",
						"folderPath": "clientes_BD_GEN",
						"container": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CID",
						"type": "String"
					},
					{
						"name": "BDATE",
						"type": "String"
					},
					{
						"name": "GEN",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalake_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/clientes_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake_conn",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clientes.csv",
						"folderPath": "clientes",
						"container": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cst_id",
						"type": "String"
					},
					{
						"name": "cst_key",
						"type": "String"
					},
					{
						"name": "cst_firstname",
						"type": "String"
					},
					{
						"name": "cst_lastname",
						"type": "String"
					},
					{
						"name": "cst_marital_status",
						"type": "String"
					},
					{
						"name": "cst_gndr",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalake_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/clientes_location_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake_conn",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clientes_location.csv",
						"folderPath": "clientes_location",
						"container": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CID",
						"type": "String"
					},
					{
						"name": "CNTRY",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalake_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/detalle_ventas_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake_conn",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Detalle_ventas.csv",
						"folderPath": "detalle_ventas",
						"container": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sls_ord_num",
						"type": "String"
					},
					{
						"name": "sls_prd_key",
						"type": "String"
					},
					{
						"name": "sls_cust_id",
						"type": "String"
					},
					{
						"name": "sls_order_dt",
						"type": "String"
					},
					{
						"name": "sls_ship_dt",
						"type": "String"
					},
					{
						"name": "sls_sales",
						"type": "String"
					},
					{
						"name": "sls_quantity",
						"type": "String"
					},
					{
						"name": "sls_price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalake_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_github_com')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "github_com",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "AdrianaC23MX/PROYFINALSisInfoII/refs/heads/main/Datos-clientes/@{dataset().file_name}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/github_com')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake_conn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"container": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalake_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gold_dim_cliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "idCliente",
						"type": "int",
						"precision": 10
					},
					{
						"name": "clikey",
						"type": "varchar"
					},
					{
						"name": "firstname",
						"type": "varchar"
					},
					{
						"name": "lastname",
						"type": "varchar"
					},
					{
						"name": "marital_status",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "fechaNac",
						"type": "date"
					},
					{
						"name": "country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "DIM_CLIENTES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gold_dim_producto')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "idproduct",
						"type": "varchar"
					},
					{
						"name": "productkey",
						"type": "varchar"
					},
					{
						"name": "nomProducto",
						"type": "varchar"
					},
					{
						"name": "costoProducto",
						"type": "int",
						"precision": 10
					},
					{
						"name": "lineProducto",
						"type": "varchar"
					},
					{
						"name": "categoria",
						"type": "varchar"
					},
					{
						"name": "subcategoria",
						"type": "varchar"
					},
					{
						"name": "mantenimiento",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "DIM_PRODUCTOS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gold_hechos_ordenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ordenNum",
						"type": "varchar"
					},
					{
						"name": "idCliente",
						"type": "int",
						"precision": 10
					},
					{
						"name": "idproduct",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sales",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "HECHOS_ORDENES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/productos_cat_mant_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake_conn",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Productos_CAT_MANT.csv",
						"folderPath": "productos_CAT_MANT",
						"container": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "CAT",
						"type": "String"
					},
					{
						"name": "SUBCAT",
						"type": "String"
					},
					{
						"name": "MAINTENANCE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalake_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/productos_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake_conn",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Productos.csv",
						"folderPath": "productos",
						"container": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "prd_id",
						"type": "String"
					},
					{
						"name": "prd_key",
						"type": "String"
					},
					{
						"name": "prd_nm",
						"type": "String"
					},
					{
						"name": "prd_cost",
						"type": "String"
					},
					{
						"name": "prd_line",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalake_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_clientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "clikey",
						"type": "varchar"
					},
					{
						"name": "firstname",
						"type": "varchar"
					},
					{
						"name": "lastname",
						"type": "varchar"
					},
					{
						"name": "marital_status",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "CLIENTES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_clientes_bd_gen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "cid",
						"type": "varchar"
					},
					{
						"name": "bdate",
						"type": "date"
					},
					{
						"name": "gen",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "CLIENTES_BD_GEN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_clientes_location')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "idcountry",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "CLIENTES_LOCATION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_detalle_ventas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "numorder",
						"type": "varchar"
					},
					{
						"name": "productkey",
						"type": "varchar"
					},
					{
						"name": "custid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "orderdt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "shipdt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sales",
						"type": "int",
						"precision": 10
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "price",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "DETALLE_VENTAS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "idproduct",
						"type": "int",
						"precision": 10
					},
					{
						"name": "productkey",
						"type": "varchar"
					},
					{
						"name": "productname",
						"type": "varchar"
					},
					{
						"name": "productcost",
						"type": "int",
						"precision": 10
					},
					{
						"name": "productline",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "PRODUCTOS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_productos_cat_mant')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_producto_cliente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "cat",
						"type": "varchar"
					},
					{
						"name": "subcat",
						"type": "varchar"
					},
					{
						"name": "maintenance",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "PRODUCTOS_CAT_MANT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_producto_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake_conn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('datalake_conn_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/github_com')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('github_com_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sa_producto_cliente')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('sa_producto_cliente_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_dw_producto_cliente')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sql_dw_producto_cliente_properties_typeProperties_server')]",
					"database": "[parameters('sql_dw_producto_cliente_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sql_dw_producto_cliente_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sql_dw_producto_cliente_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_df_clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "clientes_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_clientes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          cst_id as string,",
						"          cst_key as string,",
						"          cst_firstname as string,",
						"          cst_lastname as string,",
						"          cst_marital_status as string,",
						"          cst_gndr as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          clikey as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          marital_status as string,",
						"          gender as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = cst_id,",
						"          key = cst_key,",
						"          firstname = cst_firstname,",
						"          lastname = cst_lastname,",
						"          marital_status = cst_marital_status,",
						"          gender = cst_gndr",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/clientes_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_df_clientes_bd_gen')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "clientes_bd_gen_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_cliente_bd_gen",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          BDATE as string,",
						"          GEN as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cid as string,",
						"          bdate as string,",
						"          gen as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          cid = CID,",
						"          bdate = BDATE,",
						"          gen = GEN",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/clientes_bd_gen_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_cliente_bd_gen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_df_clientes_location')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "clientes_location_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_clientes_location",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          CNTRY as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          idcountry as string,",
						"          country as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          idcountry = CID,",
						"          country = CNTRY",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/clientes_location_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_clientes_location')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_df_detalle_ventas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "detalle_ventas_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_detalle_ventas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          sls_ord_num as string,",
						"          sls_prd_key as string,",
						"          sls_cust_id as string,",
						"          sls_order_dt as string,",
						"          sls_ship_dt as string,",
						"          sls_sales as string,",
						"          sls_quantity as string,",
						"          sls_price as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          numorder as string,",
						"          productkey as string,",
						"          custid as string,",
						"          orderdt as string,",
						"          shipdt as string,",
						"          sales as string,",
						"          quantity as string,",
						"          price as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          numorder = sls_ord_num,",
						"          productkey = sls_prd_key,",
						"          custid = sls_cust_id,",
						"          orderdt = sls_order_dt,",
						"          shipdt = sls_ship_dt,",
						"          sales = sls_sales,",
						"          quantity = sls_quantity,",
						"          price = sls_price",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/detalle_ventas_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_detalle_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_df_productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "productos_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_productos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          prd_id as string,",
						"          prd_key as string,",
						"          prd_nm as string,",
						"          prd_cost as string,",
						"          prd_line as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          idproduct as string,",
						"          productkey as string,",
						"          productname as string,",
						"          productcost as string,",
						"          productline as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          idproduct = prd_id,",
						"          productkey = prd_key,",
						"          productname = prd_nm,",
						"          productcost = prd_cost,",
						"          productline = prd_line",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/productos_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_df_productos_cat_mantenance')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "productos_cat_mant_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_productos_cat_mant",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          CAT as string,",
						"          SUBCAT as string,",
						"          MAINTENANCE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          producto_id as string,",
						"          categoria as string,",
						"          subcategoria as string,",
						"          mantenimiento as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          producto_id = ID,",
						"          categoria = CAT,",
						"          subcategoria = SUBCAT,",
						"          mantenimiento = MAINTENANCE",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/productos_cat_mant_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_productos_cat_mant')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gold_df_dim_cliente')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "silver_clientes",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "silver_clientes_bd_gen",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "silver_clientes_location",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "gold_dim_cliente",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "cast1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "cast2"
						},
						{
							"name": "join2"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as integer,",
						"          clikey as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          marital_status as string,",
						"          gender as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT id, clikey,firstname,lastname,marital_status,gender FROM SILVER.CLIENTES',",
						"     format: 'query') ~> source1",
						"source(output(",
						"          cid as string,",
						"          bdate as date,",
						"          gen as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT cid, bdate, gen FROM SILVER.CLIENTES_BD_GEN',",
						"     format: 'query') ~> source2",
						"source(output(",
						"          idcountry as string,",
						"          country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT idcountry, country FROM SILVER.CLIENTES_LOCATION\\n',",
						"     format: 'query') ~> source3",
						"source1, cast1 join(id == cid,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"source2 derive(cid = right(cid, 5)) ~> derivedColumn1",
						"derivedColumn1 cast(output(",
						"          cid as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"source3 derive(idcountry = right(idcountry, 5)) ~> derivedColumn2",
						"derivedColumn2 cast(output(",
						"          idcountry as integer",
						"     ),",
						"     errors: true) ~> cast2",
						"join1, cast2 join(id == idcountry,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"join2 aggregate(groupBy(id),",
						"     each(match(name!='id'), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          idCliente as integer,",
						"          clikey as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          marital_status as string,",
						"          gender as string,",
						"          fechaNac as date,",
						"          country as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          idCliente = id,",
						"          clikey,",
						"          firstname,",
						"          lastname,",
						"          marital_status,",
						"          gender = gen,",
						"          fechaNac = bdate,",
						"          country",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/silver_clientes')]",
				"[concat(variables('factoryId'), '/datasets/silver_clientes_bd_gen')]",
				"[concat(variables('factoryId'), '/datasets/silver_clientes_location')]",
				"[concat(variables('factoryId'), '/datasets/gold_dim_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gold_df_dim_producto')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "silver_productos",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "silver_productos_cat_mant",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "gold_dim_producto",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "cast1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          idproduct as integer,",
						"          productkey as string,",
						"          productname as string,",
						"          productcost as integer,",
						"          productline as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT idproduct, productkey,productname,productcost,productline FROM SILVER.PRODUCTOS\\n',",
						"     format: 'query') ~> source1",
						"source(output(",
						"          id as string,",
						"          cat as string,",
						"          subcat as string,",
						"          maintenance as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT id, cat,subcat,maintenance FROM SILVER.PRODUCTOS_CAT_MANT',",
						"     format: 'query') ~> source2",
						"source1 derive(productkey = left(productkey,5),",
						"          productcost = iif(isNull(productcost), 0, productcost)) ~> derivedColumn1",
						"derivedColumn1, derivedColumn2 join(productkey == id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"source2 derive(id = replace(id, '_', '-')) ~> derivedColumn2",
						"join1 cast(output(",
						"          idproduct as string",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 aggregate(groupBy(idproduct),",
						"     each(match(name!='idproduct'), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          idproduct as string,",
						"          productkey as string,",
						"          nomProducto as string,",
						"          costoProducto as integer,",
						"          lineProducto as string,",
						"          categoria as string,",
						"          subcategoria as string,",
						"          mantenimiento as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          idproduct,",
						"          productkey,",
						"          nomProducto = productname,",
						"          costoProducto = productcost,",
						"          lineProducto = productline,",
						"          categoria = cat,",
						"          subcategoria = subcat,",
						"          mantenimiento = maintenance",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/silver_productos')]",
				"[concat(variables('factoryId'), '/datasets/silver_productos_cat_mant')]",
				"[concat(variables('factoryId'), '/datasets/gold_dim_producto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gold_df_hechos_ordenes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "silver_detalle_ventas",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "silver_productos",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "silver_clientes",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "gold_hechos_ordenes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "join2"
						},
						{
							"name": "cast1"
						},
						{
							"name": "aggregate1",
							"description": "Agregación de datos por \"numorder\" que genera las columnas \"productkey, custid, orderdt, shipdt, sales, quantity, price, idproduct, id, firstname\""
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          numorder as string,",
						"          productkey as string,",
						"          custid as integer,",
						"          orderdt as integer,",
						"          shipdt as integer,",
						"          sales as integer,",
						"          quantity as integer,",
						"          price as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT numorder,productkey,custid,orderdt,shipdt,sales,quantity,price FROM SILVER.DETALLE_VENTAS\\n',",
						"     format: 'query') ~> source1",
						"source(output(",
						"          idproduct as integer,",
						"          productkey as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT idproduct, productkey FROM SILVER.PRODUCTOS',",
						"     format: 'query') ~> source2",
						"source(output(",
						"          id as integer,",
						"          firstname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT id, firstname FROM SILVER.CLIENTES',",
						"     format: 'query') ~> source3",
						"source1, derivedColumn1 join(source1@productkey == derivedColumn1@productkey,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"cast1 derive(productkey = substring(productkey, 7)) ~> derivedColumn1",
						"join1, source3 join(custid == id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"source2 cast(output(",
						"          idproduct as string",
						"     ),",
						"     errors: true) ~> cast1",
						"select1 aggregate(groupBy(numorder),",
						"     each(match(name!='numorder'), $$ = first($$))) ~> aggregate1",
						"join2 select(mapColumn(",
						"          numorder,",
						"          productkey = source1@productkey,",
						"          custid,",
						"          orderdt,",
						"          shipdt,",
						"          sales,",
						"          quantity,",
						"          price,",
						"          idproduct,",
						"          id,",
						"          firstname",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ordenNum as string,",
						"          idCliente as integer,",
						"          idproduct as string,",
						"          quantity as integer,",
						"          price as integer,",
						"          sales as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          ordenNum = numorder,",
						"          idCliente = custid,",
						"          idproduct,",
						"          quantity,",
						"          price,",
						"          sales",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/silver_detalle_ventas')]",
				"[concat(variables('factoryId'), '/datasets/silver_productos')]",
				"[concat(variables('factoryId'), '/datasets/silver_clientes')]",
				"[concat(variables('factoryId'), '/datasets/gold_hechos_ordenes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_df_clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_sql_clientes",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "silver_clientes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          clikey as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          marital_status as string,",
						"          gender as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT id, clikey, firstname, lastname, marital_status, gender FROM BRONZE.CLIENTES',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          id as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as integer,",
						"          clikey as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          marital_status as string,",
						"          gender as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id,",
						"          clikey,",
						"          firstname,",
						"          lastname,",
						"          marital_status,",
						"          gender",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bronze_sql_clientes')]",
				"[concat(variables('factoryId'), '/datasets/silver_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_df_clientes_bd_gen')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_sql_cliente_bd_gen",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "silver_clientes_bd_gen",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          cid as string,",
						"          bdate as string,",
						"          gen as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT cid, bdate, gen FROM BRONZE.CLIENTES_BD_GEN',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          cid as string",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cid as string,",
						"          bdate as date,",
						"          gen as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          cid,",
						"          bdate,",
						"          gen",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bronze_sql_cliente_bd_gen')]",
				"[concat(variables('factoryId'), '/datasets/silver_clientes_bd_gen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_df_clientes_location')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_clientes_location",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "silver_clientes_location",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          idcountry as string,",
						"          country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT idcountry, country FROM BRONZE.CLIENTES_LOCATION',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          idcountry as string,",
						"          country as string",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          idcountry as string,",
						"          country as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          idcountry,",
						"          country",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bronze_clientes_location')]",
				"[concat(variables('factoryId'), '/datasets/silver_clientes_location')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_df_detalle_ventas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_sql_detalle_ventas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "silver_detalle_ventas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          numorder as string,",
						"          productkey as string,",
						"          custid as string,",
						"          orderdt as string,",
						"          shipdt as string,",
						"          sales as string,",
						"          quantity as string,",
						"          price as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT numorder, productkey, custid, orderdt, shipdt,sales,quantity,price FROM BRONZE.DETALLE_VENTAS',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          numorder as string,",
						"          productkey as string,",
						"          custid as integer,",
						"          orderdt as integer,",
						"          shipdt as integer,",
						"          sales as integer,",
						"          quantity as integer,",
						"          price as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          numorder as string,",
						"          productkey as string,",
						"          custid as integer,",
						"          orderdt as integer,",
						"          shipdt as integer,",
						"          sales as integer,",
						"          quantity as integer,",
						"          price as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          numorder,",
						"          productkey,",
						"          custid,",
						"          orderdt,",
						"          shipdt,",
						"          sales,",
						"          quantity,",
						"          price",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bronze_sql_detalle_ventas')]",
				"[concat(variables('factoryId'), '/datasets/silver_detalle_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_df_productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_sql_productos",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "silver_productos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          idproduct as string,",
						"          productkey as string,",
						"          productname as string,",
						"          productcost as string,",
						"          productline as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT idproduct, productkey,productname,productcost,productline FROM BRONZE.PRODUCTOS',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          idproduct as integer,",
						"          productcost as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          idproduct as integer,",
						"          productkey as string,",
						"          productname as string,",
						"          productcost as integer,",
						"          productline as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          idproduct,",
						"          productkey,",
						"          productname,",
						"          productcost,",
						"          productline",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bronze_sql_productos')]",
				"[concat(variables('factoryId'), '/datasets/silver_productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_df_productos_cat_mant')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_sql_productos_cat_mant",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "silver_productos_cat_mant",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          producto_id as string,",
						"          categoria as string,",
						"          subcategoria as string,",
						"          mantenimiento as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT producto_id, categoria, subcategoria, mantenimiento FROM BRONZE.PRODUCTOS_CAT_MANT',",
						"     format: 'query') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          cat as string,",
						"          subcat as string,",
						"          maintenance as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          id = producto_id,",
						"          cat = categoria,",
						"          subcat = subcategoria,",
						"          maintenance = mantenimiento",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bronze_sql_productos_cat_mant')]",
				"[concat(variables('factoryId'), '/datasets/silver_productos_cat_mant')]"
			]
		}
	]
}